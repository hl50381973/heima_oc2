1.设计2个类，类之间的关系自拟（比如继承、组合）
1> 车
(1)属性
* 轮子数
* 速度

(2)方法
* 属性相应的set和get方法

2> 客车
(1)属性
* 轮子数
* 速度
* 座位数

(2)方法
* 属性相应的set和get方法

/*----------------------------------------*/

2.设计2个类，类之间的关系自拟（比如继承、组合）
1> 身材数据
(1)属性
* 身高
* 体重
* 手长
* 脚长

(2)方法
* 属性相应的set和get方法

2> 人
(1)属性
* 年龄
* 身高
* 体重
* 手长
* 脚长

(2)方法
* 属性相应的set和get方法

/*----------------------------------------*/

3.设计3个类，类之间的关系自拟（比如继承、组合）
1> 人
(1)属性
* 姓名
* 年龄

(2)方法
* 属性相应的set和get方法
* 设计一个对象方法同时设置姓名和年龄

2> 书
(1)属性
* 书名
* 出版社名称
* 作者（包含姓名和年龄）

(2)方法
* 属性相应的set和get方法

3> 学生
* 姓名
* 年龄
* 学号
* 书（随身带着一本书）

2> 方法
* 属性相应的set和get方法
* 设计一个对象方法-study：输出书名

/*----------------------------------------*/

4.设计Car类
1> 属性
* 速度

2> 方法
* 属性相应的set和get方法
* 一个对象方法跟其他车子比较车速，返回速度差
* 一个类方法比较两辆车的车速，返回速度差

/*----------------------------------------*/

5.设计一个类Point2D，用来表示二维平面中某个点
1> 属性
* double x
* double y

2> 方法
* 属性相应的set和get方法
* 设计一个对象方法同时设置x和y
* 设计一个对象方法计算跟其他点的距离
* 设计一个类方法计算两个点之间的距离

3> 提示
* C语言的math.h中有个函数：double pow(double n, double m); 计算n的m次方
* C语言的math.h中有个函数：double sqrt(double n); 计算根号n的值（对n进行开根）

/*----------------------------------------*/

6.设计一个类Circle，用来表示二维平面中的圆
1> 属性
* double _radius （半径）
* Point2D *_point （圆心）

2> 方法
* 属性相应的set和get方法
* 设计一个对象判断跟其他圆是否重叠（重叠返回YES，否则返回NO）
* 设计一个类方法判断两个圆是否重叠（重叠返回YES，否则返回NO）